{% extends '@!EasyAdmin/layout.html.twig' %}

{% block content_title %}Aktivitäten{% endblock %}

{% block configured_stylesheets %}
    {{ parent() }}
{% endblock %}

{% block configured_javascripts %}
    {{ parent() }}
{% endblock %}

{% block main %}
    {% if is_granted('ROLE_ADMIN') %}

        <div class="mb-5">

            <div class="h5 border-bottom pb-2 mb-3">Aufrufe pro Tag für {{ "now"|format_datetime('full', 'none', 'MMMM Y', locale: 'de') }}</div>
            <canvas id="botChart" width="800" height="300"></canvas>

            <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
            <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-regression@latest"></script>

            <script>

                const data = Object.values({{ userPerDay|json_encode|raw }});

                // Regression berechnen (basierend auf Index)
                function getLinearRegression(y) {
                    const n = y.length;
                    const sumX = y.reduce((sum, _, i) => sum + i, 0);
                    const sumY = y.reduce((sum, yi) => sum + yi, 0);
                    const sumXY = y.reduce((sum, yi, i) => sum + i * yi, 0);
                    const sumXX = y.reduce((sum, _, i) => sum + i * i, 0);

                    const slope = (n * sumXY - sumX * sumY) / (n * sumXX - sumX * sumX);
                    const intercept = (sumY - slope * sumX) / n;

                    return y.map((_, i) => slope * i + intercept);
                }

                const regressionData = getLinearRegression(data);

                const ctx = document.getElementById('botChart').getContext('2d');
                const botChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: {{ labels|json_encode|raw }},
                        datasets: [
                            {
                                type: 'line',
                                label: 'Anfragevolumen',
                                data:{{ sum|json_encode|raw }},
                                backgroundColor: 'rgba(138, 43, 226, 0.5)',
                                borderColor: 'rgba(138, 43, 226, 0.5)',
                                borderWidth: 4,
                                pointRadius: 0,
                                pointHoverRadius: 4,
                                tension: 0.2,
                                fill: false
                            },
                            {
                                type: 'line',
                                label: 'Verdächtige Zugriffe',
                                data: {{ fraud|json_encode|raw }},
                                backgroundColor: 'rgba(255, 144, 30, 0.5)',
                                borderColor: 'rgba(255, 144, 30, 0.5)',
                                tension: 0.2,
                                borderWidth: 4,
                                pointRadius: 0,
                                pointHoverRadius: 4,
                                fill: false,
                                stack: 'suspicious'
                            },
                            {
                                type: 'line',
                                label: 'eindeutige Nutzer',
                                data: {{ userPerDay|json_encode|raw }},
                                backgroundColor: 'rgba(30, 144, 255, 0.5)',
                                borderColor: 'rgba(30, 144, 255, 0.5)',
                                tension: 0.2,
                                borderWidth: 4,
                                pointRadius: 0,
                                pointHoverRadius: 4,
                                fill: false,
                                stack: 'separat',
                            },
                            {
                                label: 'Trendlinie - Nutzervolumen',
                                type: 'line',
                                borderDash: [5, 5],
                                data: regressionData,
                                regression: true,
                                regressionType: 'linear',
                                backgroundColor: 'rgba(30, 144, 255, 0.5)',
                                borderColor: 'rgba(30, 144, 255, 0.5)',
                                stack: 'nope',
                                fill: false,
                                pointRadius: 0
                            },
                            {
                                label: 'fehlerfrei',
                                data: {{ stateOk|json_encode|raw }},
                                borderColor: false,
                                backgroundColor: 'rgba(50, 205, 50, 0.5)',
                                tension: 0.1,
                                fill: false
                            },
                            {
                                label: 'Weiterleitung',
                                data: {{ stateRedirect|json_encode|raw }},
                                borderColor: false,
                                backgroundColor: 'rgba(0, 191, 255, 0.5)',
                                tension: 0.1,
                                fill: false
                            },
                            {
                                label: 'nicht gefunden',
                                data: {{ stateNotFound|json_encode|raw }},
                                borderColor: false,
                                backgroundColor: 'rgba(255, 215, 0, 0.5)',
                                tension: 0.1,
                                fill: false
                            },
                            {
                                label: 'Serverfehler',
                                data: {{ stateServerError|json_encode|raw }},
                                borderColor: false,
                                backgroundColor: 'rgba(255, 99, 71, 0.5)',
                                tension: 0.1,
                                fill: false
                            }
                        ]
                    },
                    options: {
                        plugins: {
                            title: {
                                display: true,
                                text: 'HTTP-Statusverteilung pro Tag'
                            },
                            legend: {
                                position: 'bottom', // Legende unten
                                labels: {
                                    color: '#000' // Optional: Textfarbe der Legende
                                }
                            },
                            tooltip: {
                                mode: 'index',
                                intersect: false,
                                backgroundColor: 'rgba(255, 255, 255, 0.9)', // heller weißer Hintergrund
                                titleColor: '#000',    // schwarze Überschrift
                                bodyColor: '#000',     // schwarze Textfarbe
                                borderColor: '#ccc',   // optional: helle Rahmenfarbe
                                borderWidth: 1,
                                // Optional: Schatten entfernen oder anpassen
                                boxShadow: '0 2px 8px rgba(0,0,0,0.1)',
                                // Optional: Schriftgröße oder -art anpassen
                                // font: { size: 14, family: 'Arial' }
                            },
                        },
                        layout: {
                            padding: 15 // optional, etwas Innenabstand
                        },
                        backgroundColor: 'rgba(136, 136, 136, 1)',
                        interaction: {
                            mode: 'index',
                            intersect: false
                        },
                        scales: {
                            x: {
                                stacked: true,
                                title: {
                                    display: true,
                                    text: 'Tag'
                                }
                            },
                            y: {
                                stacked: true,
                                title: {
                                    display: true,
                                    text: 'Anzahl'
                                },
                                beginAtZero: true
                            }
                        }
                    },
                    plugins: [{
                        id: 'customBackgroundColor',
                        beforeDraw: (chart) => {
                            const ctx = chart.ctx;
                            ctx.save();
                            ctx.fillStyle = 'rgba(136, 136, 136, .1)'; // mittleres Grau
                            ctx.fillRect(0, 0, chart.width, chart.height);
                            ctx.restore();
                        }
                    }]
                });
            </script>
        </div>

        <div class="mb-5">
            <div class="h5 border-bottom pb-2 mb-3">Systeminformationen</div>
            <table class="table table-striped table-hover">
                <thead>
                <tr>
                    <th scope="col">Element</th>
                    <th scope="col">Wert</th>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <th>Systemzeit</th>
                    <td>{{ "now"|date }}</td>
                </tr>
                {% for key, value in serverStats %}
                    <tr>
                        <th class="text-nowrap">
                            {{ key|replace({
                                'server_time': 'Serverzeit',
                                'php_version': 'PHP-Version',
                                'symfony_version': 'Symfony-Version',
                                'memory_limit': 'Memory-Limit',
                                'upload_max_filesize': 'Upload-Limit',
                                'post_max_size': 'POST-Limit',
                                'max_execution_time': 'Max. Ausführungszeit',
                                'os': 'Betriebssystem',
                                'hostname': 'Hostname',
                                'server_software': 'Server-Software',
                                'server_ip': 'Server-IP',
                                'timezone': 'Zeitzone',
                                'sapi': 'PHP-SAPI',
                                'load_1': 'Systemlast (1 Min)',
                                'load_5': 'Systemlast (5 Min)',
                                'load_15': 'Systemlast (15 Min)',
                                'disk_free_mb': 'Freier Speicher (MB)',
                                'disk_total_mb': 'Gesamtspeicher (MB)',
                                'memory_usage_mb': 'RAM-Auslastung (MB)',
                                'memory_peak_mb': 'RAM-Peak (MB)'
                            }) }}
                        </th>
                        <td>
                            {% if value is iterable %}
                                {{ value|join(', ') }}
                            {% else %}
                                {{ value }}
                            {% endif %}
                        </td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
        </div>

        <div class="mb-5">
            <div class="h5 border-bottom pb-2 mb-3">Umfrageergebnisse</div>
            <table class="table table-striped table-hover">
                <thead>
                <tr>
                    <th scope="col">Umfrage</th>
                    <th scope="col">Ja</th>
                    <th scope="col">Nein</th>
                </tr>
                </thead>
                <tbody>
                {% for survey in surveys %}
                    <tr>
                        <td>{{ survey }}</td>
                        <td>{{ survey.surveyAnswers|filter(a => a.answer == true)|length }}</td>
                        <td>{{ survey.surveyAnswers|filter(a => a.answer == false)|length }}</td>
                    </tr>
                {% else %}
                    <tr>
                        <td colspan="3" class="text-center">Keine aktiven Umfragen gefunden</td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
        </div>

        <div class="mb-5">
            <div class="h5 border-bottom pb-2 mb-3">Change-Log</div>
            <ul class="list-group">
                <li class="list-group-item"><strong>15.03.2025</strong> Design-Anpassungen: subtile Rundung der Cards.</li>
                <li class="list-group-item"><strong>16.03.2025</strong> Newsletter können jetzt konfiguriert und geplant werden.</li>
                <li class="list-group-item"><strong>16.03.2025</strong> Alumni-Übersicht neu gestaltet.</li>
                <li class="list-group-item"><strong>16.03.2025</strong> Navigationsmenü um Details erweitert.</li>
                <li class="list-group-item"><strong>17.03.2025</strong> Sicherheitstest für Pinnwand abgeschlossen.</li>
                <li class="list-group-item"><strong>19.03.2025</strong> Newsletter-Warteschlange wird täglich um 10 Uhr erstellt.</li>
                <li class="list-group-item"><strong>19.03.2025</strong> Jede Stunde werden 100 Empfänger aus der Warteschlange abgearbeitet. Frühestens jedoch ab eingestellter Uhrzeit.</li>
                <li class="list-group-item"><strong>10.04.2025</strong> Hochschulen, Interessen und Hobbies wurden "datenbankifiziert".</li>
                <li class="list-group-item"><strong>13.05.2025</strong> Gruscheln wurde wunschgemäß implementiert.</li>
                <li class="list-group-item"><strong>13.05.2025</strong> Nachrichtensystem wurde "entchattifiziert".</li>
            </ul>
        </div>

    {% endif %}


    {% if is_granted('ROLE_AUTHOR') %}
        <div class="h5 border-bottom pb-2 mb-3">Meine aktiven Beiträge</div>
        <div class="h6 txt-primary">Themen-Blog</div>
            <table class="table datagrid mb-3">
                <thead>
                <tr>
                    <th class="py-2" data-column="title">Titel</th>
                    <th>Typ</th>
                    <th>Leitartikel</th>
                    <th>Erstellt</th>
                    <th></th>
                </tr>
                </thead>
                <tbody>
                {% for post in posts %}
                    <tr data-id="{{ loop.index }}">
                        <td class="field-text text-truncate" data-column="title">{{ post.title }}</td>
                        <td>{{ post.type }}</td>
                        <td>{{ post.isLeadPost ? 'ja' : 'nein' }}</td>
                        <td>{{ post.updatedAt|ago }}</td>
                        <td class="actions">
                            <a href="#" class="action-edit">
                                <span class="action-label">Anzeigen</span>
                            </a>
                            <a href="#" class="action-edit">
                                <span class="action-label">Bearbeiten</span>
                            </a>
                        </td>
                    </tr>
                {% else %}
                {% endfor %}
                </tbody>
            </table>
        <div class="h6 txt-primary">Aktuelles und Meldungen</div>
        <table class="table datagrid">
            <thead>
            <tr>
                <th class="py-2" data-column="title">Titel</th>
                <th>Typ</th>
                <th>Erstellt</th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            {% for post in news_articles %}
                <tr data-id="{{ loop.index }}">
                    <td class="field-text text-truncate" data-column="title">{{ post.title }}</td>
                    <td>{{ post.type }}</td>
                    <td>{{ post.updatedAt|ago }}</td>
                    <td class="actions">
                        <a href="#" class="action-edit">
                            <span class="action-label">Anzeigen</span>
                        </a>
                        <a href="#" class="action-edit">
                            <span class="action-label">Bearbeiten</span>
                        </a>
                    </td>
                </tr>
            {% else %}
            {% endfor %}
            </tbody>
        </table>

    {% endif %}

{% endblock main %}

{% block page_actions %}
    {#
    <a class="btn btn-primary" href="#">Some Action</a>
    <a class="btn btn-primary" href="#">Some Action</a>
    <a class="btn btn-primary" href="#">Some Action</a>
    #}
{% endblock %}